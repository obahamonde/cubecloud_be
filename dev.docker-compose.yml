version: "3.3"

services:


  db:
    image: postgres:12.2
    container_name: db
    networks:
      - backend
    ports:
      - "5432"
    volumes:
      - /var/lib/postgresql/data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

  cache:
    image: redis/redis-stack
    container_name: cache
    networks:
      - backend
    ports:
      - "6379"
    volumes:
      - /var/lib/redis/data:/data

  queue:
    image: rabbitmq:3.8.2-management
    container_name: queue
    networks:
      - backend
    ports:
      - "5672"
      - "15672"
    volumes:
      - /var/lib/rabbitmq/data:/var/lib/rabbitmq/data
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
      RABBITMQ_DEFAULT_VHOST: rabbitmq

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    networks:
      - backend
      - frontend
    ports:
      - "5000"
    volumes:
      - .:/app
    depends_on:
      - db
      - cache
      - queue
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - REDIS_URL=redis://cache:6379/0
      - RABBITMQ_URL=amqp://rabbitmq:rabbitmq@queue:5672/rabbitmq


networks:
  backend:
  frontend:
    driver: bridge